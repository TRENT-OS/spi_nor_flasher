/*
 * Copyright (C) 2020-2024, HENSOLDT Cyber GmbH
 * 
 * SPDX-License-Identifier: GPL-2.0-or-later
 *
 * For commercial licensing, contact: info.cyber@hensoldt.net
 */

import <std_connector.camkes>;

import "components/FlashRpi3/FlashRpi3.camkes";

#include "RamDisk/RamDisk.camkes";
RamDisk_COMPONENT_DEFINE(RamDisk)

#include "TimeServer/camkes/TimeServer.camkes"
TimeServer_COMPONENT_DEFINE(TimeServer)

#include "RPi_SPI_Flash/RPi_SPI_Flash.camkes"
RPi_SPI_Flash_COMPONENT_DEFINE(RPi_SPI_Flash)
RPi_SPI_Flash_HW_COMPONENT_DEFINE(RPi_SPI_Flash_HW)


assembly {
    composition {
        component  FlashRpi3    flashRpi3;
        component  TimeServer   timeServer;
        component  RamDisk      inputRamDisk;

        RamDisk_INSTANCE_CONNECT_CLIENT(
          inputRamDisk,
          flashRpi3.inputStorage_rpc,
          flashRpi3.inputStorage_port)

        component RPi_SPI_Flash     flash;
        component RPi_SPI_Flash_HW  flash_hw;

        RPi_SPI_Flash_INSTANCE_CONNECT(
            flash,
            flash_hw
        )
        RPi_SPI_Flash_INSTANCE_CONNECT_CLIENT(
            flash,
            flashRpi3.outputStorage_rpc, flashRpi3.outputStorage_port
        )

        TimeServer_INSTANCE_CONNECT_CLIENTS(
            timeServer,
            flash.timeServer_rpc, flash.timeServer_notify
        )
    }

    configuration {
        RPi_SPI_Flash_HW_INSTANCE_CONFIGURE_SELF(
            flash_hw
        )

        TimeServer_CLIENT_ASSIGN_BADGES(
            flash.timeServer_rpc
        )

        inputRamDisk.storage_size = (1 * 1024 * 1024);
    }
}
